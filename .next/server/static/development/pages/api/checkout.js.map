{"version":3,"file":"static\\development\\pages\\api\\checkout.js","sources":["webpack:///webpack/bootstrap","webpack:///./models/Cart.js","webpack:///./models/Order.js","webpack:///./pages/api/checkout.js","webpack:///./utils/calculateCartTotal.js","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongoose\"","webpack:///external \"stripe\"","webpack:///external \"uuid/v4\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","import mongoose from 'mongoose';\r\n\r\nconst {ObjectId , Number} = mongoose.Schema.Types;\r\n\r\nconst CartSchema = new mongoose.Schema({\r\n    user: {\r\n        type: ObjectId,\r\n        ref: \"User\"\r\n    },\r\n    products: [\r\n        {\r\n            quantity: {\r\n                type: Number,\r\n                default: 1\r\n            },\r\n            product: {\r\n                type: ObjectId,\r\n                 ref: 'Product'\r\n            }\r\n        }\r\n    ]\r\n});\r\n\r\nexport default mongoose.models.Cart || mongoose.model(\"Cart\", CartSchema);","import mongoose from 'mongoose';\r\n\r\nconst {ObjectId , Number} = mongoose.Schema.Types;\r\n\r\nconst OrderSchema = new mongoose.Schema({\r\n    user: {\r\n        type: ObjectId,\r\n        ref: \"User\"\r\n    },\r\n    products: [\r\n        {\r\n            quantity: {\r\n                type: Number,\r\n                default: 1\r\n            },\r\n            product: {\r\n                type: ObjectId,\r\n                 ref: 'Product'\r\n            }\r\n        }\r\n    ],\r\n    email: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    total : {\r\n        type: Number,\r\n        required: true\r\n    }\r\n}, {\r\n    timestamps: true\r\n});\r\n\r\nexport default mongoose.models.Order || mongoose.model(\"Order\", OrderSchema);","import Stripe from \"stripe\";\r\nimport uuidv4 from \"uuid/v4\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport Cart from \"../../models/Cart\";\r\nimport Order from \"../../models/Order\";\r\nimport calculateCarTotal from \"../../utils/calculateCartTotal\";\r\n\r\nconst stripe = Stripe(process.env.STRIPE_SECRET_KEY);\r\n\r\nexport default async (req, res) => {\r\n  const { paymentData } = req.body;\r\n\r\n  try {\r\n    // 1) Verify and get user id from token\r\n    const { userId } = jwt.verify(\r\n      req.headers.authorization,\r\n      process.env.JWT_SECRET\r\n    );\r\n    // 2) Find cart based on user id, populate it\r\n    const cart = await Cart.findOne({ user: userId }).populate({\r\n      path: \"products.product\",\r\n      model: \"Product\"\r\n    });\r\n    // 3) Calculate cart totals again from cart products\r\n    const { cartTotal, stripeTotal } = calculateCarTotal(cart.products);\r\n    // 4) Get email from payment data, see if email linked with existing Stripe customer\r\n    const prevCustomer = await stripe.customers.list({\r\n      email: paymentData.email,\r\n      limit: 1\r\n    });\r\n    const isExistingCustomer = prevCustomer.data.length > 0;\r\n    // 5) If not existing customer, create them based on their email\r\n    let newCustomer;\r\n    if (!isExistingCustomer) {\r\n      newCustomer = await stripe.customers.create({\r\n        email: paymentData.email,\r\n        source: paymentData.id\r\n      });\r\n    }\r\n    const customer =\r\n      (isExistingCustomer && prevCustomer.data[0].id) || newCustomer.id;\r\n    // 6) Create charge with total, send receipt email\r\n    const charge = await stripe.charges.create(\r\n      {\r\n        currency: \"usd\",\r\n        amount: stripeTotal,\r\n        receipt_email: paymentData.email,\r\n        customer,\r\n        description: `Checkout | ${paymentData.email} | ${paymentData.id}`\r\n      },\r\n      {\r\n        idempotency_key: uuidv4()\r\n      }\r\n    );\r\n    // 7) Add order data to database\r\n    await new Order({\r\n      user: userId,\r\n      email: paymentData.email,\r\n      total: cartTotal,\r\n      products: cart.products\r\n    }).save();\r\n    // 8) Clear products in cart\r\n    await Cart.findOneAndUpdate({ _id: cart._id }, { $set: { products: [] } });\r\n    // 9) Send back success (200) response\r\n    res.status(200).send(\"Checkout successful\");\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send(\"Error processing charge\");\r\n  }\r\n};\r\n","function calculateCarTotal (products) {\r\n\r\n  const total =  products.reduce((acc, el) => {\r\n      acc += el.product.price * el.quantity;\r\n      return acc;\r\n    },0);\r\n\r\n    const cartTotal=((total * 100) / 100).toFixed(2) ;\r\n    const stripeTotal = Number((total * 100).toFixed(2));\r\n\r\n    return { cartTotal, stripeTotal};\r\n}\r\n\r\nexport default calculateCarTotal ;\r\n","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");","module.exports = require(\"stripe\");","module.exports = require(\"uuid/v4\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AANA;AAmBA;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AArBA;AA0BA;AADA;AAIA;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACbA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}