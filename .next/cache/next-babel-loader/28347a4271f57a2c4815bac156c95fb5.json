{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farha\\\\Desktop\\\\reacttest\\\\components\\\\Account\\\\AccountOrders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Header, Accordion, Label, Segment, Icon, Button, List, Image } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport formatDate from '../../utils/formatDate';\n\nfunction AccountOrders(_ref) {\n  var orders = _ref.orders;\n  var router = useRouter();\n\n  function mapOrdersToPanels(orders) {\n    return orders.map(function (order) {\n      return {\n        key: order._id,\n        title: {\n          content: __jsx(Label, {\n            color: \"blue\",\n            content: formatDate(order.createdAt),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 13\n            },\n            __self: this\n          })\n        },\n        content: {\n          content: __jsx(React.Fragment, null, __jsx(List.Header, {\n            as: \"h3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, \"Total: $\", order.total, __jsx(Label, {\n            content: order.email,\n            icon: \"mail\",\n            basic: true,\n            horizontal: true,\n            style: {\n              marginLeft: '1em'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          })), __jsx(List, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, order.products.map(function (p) {\n            return __jsx(List.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }, __jsx(Image, {\n              avatar: true,\n              src: p.product.mediaUrl,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            }), __jsx(List.Content, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32\n              },\n              __self: this\n            }, __jsx(List.Header, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33\n              },\n              __self: this\n            }, p.product.name), __jsx(List.Description, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34\n              },\n              __self: this\n            }, p.quantity, \" . $\", p.product.price)), __jsx(List.Content, {\n              floated: \"right\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }, __jsx(Label, {\n              tag: true,\n              color: \"red\",\n              size: \"tiny\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            }, p.product.sku)));\n          })))\n        }\n      };\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"folder open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), \"Order History\"), orders.length === 0 ? __jsx(Segment, {\n    inverted: true,\n    tertiary: true,\n    color: \"grey\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"copy outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), \"No past orders\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return router.push('/');\n    },\n    color: \"orange\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"View Products\"))) : __jsx(Accordion, {\n    fluid: true,\n    styled: true,\n    exclusive: false,\n    panels: mapOrdersToPanels(orders),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n}\n\nexport default AccountOrders;","map":{"version":3,"sources":["C:\\Users\\farha\\Desktop\\reacttest\\components\\Account\\AccountOrders.js"],"names":["Header","Accordion","Label","Segment","Icon","Button","List","Image","useRouter","formatDate","AccountOrders","orders","router","mapOrdersToPanels","map","order","key","_id","title","content","createdAt","total","email","marginLeft","products","p","product","mediaUrl","name","quantity","price","sku","length","push"],"mappings":"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","sourcesContent":["import { Header, Accordion, Label, Segment, Icon, Button, List, Image } from 'semantic-ui-react';\nimport { useRouter} from 'next/router';\nimport formatDate from '../../utils/formatDate';\n\nfunction AccountOrders({ orders}) {\n  const router = useRouter();\n\n  function mapOrdersToPanels (orders) {\n    \n    return orders.map(order => ({\n      key: order._id,\n      title : {\n        content: <Label color='blue' content={formatDate(order.createdAt)} />\n      },\n      content: {\n        content: (\n          <>\n          <List.Header as=\"h3\" >\n          Total: ${order.total}\n          <Label\n          content={order.email}\n          icon='mail'\n          basic\n          horizontal\n          style={{ marginLeft: '1em' }}\n          />\n          </List.Header>\n          <List>\n          {order.products.map(p => (\n            <List.Item>\n            <Image avatar src ={p.product.mediaUrl} />\n            <List.Content>\n            <List.Header>{p.product.name}</List.Header>\n            <List.Description>{p.quantity} . ${p.product.price}</List.Description>\n\n            </List.Content>\n            <List.Content floated='right' >\n            <Label tag color='red' size='tiny' >\n             {p.product.sku}\n            </Label>\n            </List.Content>\n            </List.Item>\n          ))}\n          </List>\n          </>\n        )\n      }\n    }))\n  }\n\n\n  return <>\n  <Header as='h2' >\n  <Icon name='folder open' />\n  Order History\n  </Header>\n  {\n   orders.length === 0 ? (\n     <Segment inverted tertiary color='grey' textAlign='center'>\n     <Header icon>\n     <Icon name='copy outline' />\n     No past orders\n     </Header>\n     <div>\n     <Button onClick={() => router.push('/')} color='orange' >\n     View Products\n     </Button>\n     </div>\n     </Segment>\n   ) : (\n     <Accordion\n     fluid\n     styled\n     exclusive={false}\n     panels={mapOrdersToPanels(orders)}\n     />\n   )\n  }\n  </>;\n}\n\nexport default AccountOrders;\n"]},"metadata":{},"sourceType":"module"}